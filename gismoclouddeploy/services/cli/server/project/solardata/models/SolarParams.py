class SolarParams(object):
    def __init__(
        self,
        power_col=None,
        min_val=-5,
        max_val=None,
        zero_night=True,
        interp_day=True,
        fix_shifts=True,
        density_lower_threshold=0.6,
        density_upper_threshold=1.05,
        linearity_threshold=0.1,
        clear_day_smoothness_param=0.9,
        clear_day_energy_param=0.8,
        verbose=False,
        start_day_ix=None,
        end_day_ix=None,
        c1=None,
        c2=500.0,
        solar_noon_estimator="com",
        correct_tz=True,
        extra_cols=None,
        daytime_threshold=0.1,
        units="W",
        solver=None,
        solver_name=None,
        solver_lic_bucket=None,
        solver_lic_file_path_name=None,
        solver_saved_lic_file_path=None,
        solver_saved_lic_file_name=None,
    ):
        self.power_col = power_col
        self.min_val = min_val
        self.max_val = max_val
        self.zero_night = zero_night
        self.interp_day = interp_day
        self.fix_shifts = fix_shifts
        self.density_lower_threshold = density_lower_threshold
        self.density_upper_threshold = density_upper_threshold
        self.linearity_threshold = linearity_threshold
        self.clear_day_smoothness_param = clear_day_smoothness_param
        self.clear_day_energy_param = clear_day_energy_param
        self.verbose = verbose
        self.start_day_ix = start_day_ix
        self.end_day_ix = end_day_ix
        self.c1 = c1
        self.c2 = c2
        self.solar_noon_estimator = solar_noon_estimator
        self.correct_tz = correct_tz
        self.extra_cols = extra_cols
        self.daytime_threshold = daytime_threshold
        self.units = units
        self.solver = solver
        self.solver_name = solver_name
        self.solver_lic_bucket = solver_lic_bucket
        self.solver_lic_file_path_name = solver_lic_file_path_name
        self.solver_saved_lic_file_path = solver_saved_lic_file_path
        self.solver_saved_lic_file_name = solver_saved_lic_file_name
