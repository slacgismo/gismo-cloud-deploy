# AWS parameters used for cli.
aws_config:
  cluster_file: "./config/eks/cluster-gridlabd.yaml"
  cluster_name: "None"                    # Generated from cluster_file
  nodegroup_name: "None"                  # Generated from cluster_file
  instanceType: "None"                    # Generated from cluster_file
  eks_nodes_number: 5                     # Total ec2 instances
  scale_eks_nodes_wait_time : 90          # in second
  interval_of_check_dynamodb_in_second: 3      # in second
  interval_of_total_wait_time_of_dynamodb: 300 # in second.
  interval_of_wait_pod_ready: 90          # in second


# Parameters used for cli in k8s config.
services_config_list:
  worker:
      desired_replicas: 1 # Define how many workers run parallel in k8s. The generated workers spread evenly among eks nodes.
      imagePullPolicy: "Always"
      deployment_file: "./config/k8s/worker.deployment.yaml"
      service_file: ""
      image_name: "worker"
      image_tag: "latest"
  server:
      desired_replicas: 1
      imagePullPolicy: "Always"
      deployment_file: "./config/k8s/server.deployment.yaml"
      service_file: "./config/k8s/server.services.yaml"
      image_name: "server"
      image_tag: "latest"
  redis:
      desired_replicas: 1
      imagePullPolicy: "Always"
      deployment_file: "./config/k8s/redis.deployment.yaml"
      service_file: "./config/k8s/redis.services.yaml"
      image_name: "redis"
      image_tag: "latest"

  rabbitmq:
      desired_replicas: 1
      imagePullPolicy: "Always"
      deployment_file: "./config/k8s/rabbitmq.deployment.yaml"
      service_file: "./config/k8s/rabbitmq.services.yaml"
      image_name: "rabbitmq"
      image_tag: "latest"

# Parameters pass to woker container.
worker_config:
  worker_dockerfile_folder: "gridlabd"        # This defines the worker dockerfile's folder . You can select "gridlabd" or "solardatatools" (If you chnage here, please change `code_template_folder` accordingly.)
  solver:
    solver_name: None
    saved_solver_bucket: None
    solver_lic_local_path: None
    solver_lic_target_path: None    # This location inside worker container is requires by MOSEK
    saved_temp_path_in_bucket: None     # Temporaty file location on S3 lic_temp/<user_id>.it grenerated in run-time and deleted after program completed.
    solver_lic_file_name: None
  data_bucket: "gcd.hipas.ny"                      # Bucket contains origin data files. "gcd.hipas.ny"
  data_file_type: ".glm"
  default_process_files: ["IEEE/8500.glm"] #"NY/glm/feeder_NY_01/NY_01_12471.glm"   # Default process files. If users do not use option -n command.
  process_column_keywords: []                   # partial match. Process all matched column name. Test colmun: "WS_5" "WS_5_DateUTC"
  saved_bucket: "pv.insight.test"                         # Bucket of saved files.
  saved_path_aws: "results"                               # Path of saved files in bucket
  saved_path_local: "results"
  acccepted_idle_time: 360
  code_template_folder: "code-templates-gridlabdNY" # Code blocks folder example: "code-templates-solardatatools" (If you change here, you have to change `worker_dockerfile_folder` accordingly)
  saved_rumtime_image_name: None            # "runtime-{user_id}.png"
  saved_performance_file: None              # "performance-{user_id}.txt"
  saved_data_target_filename: None          # "results-{user_id}.csv"
  saved_logs_target_filename: None          # "logs-{user_id}.csv"
  saved_error_target_filename: None         # "error-{user_id}.csv"
  curr_process_file : None      # It's a hint column that is generated in the CLI run-time.
  curr_process_column : None    # It's a hint column that is generated in the CLI run-time.
  aws_access_key : None         # It's a hint column that is generated in the CLI run-time.
  aws_secret_access_key : None  # It's a hint column that is generated in the CLI run-time.
  aws_region : None             # It's a hint column that is generated in the CLI run-time.
  sns_topic : None              # It's a hint column that is generated in the CLI run-time.
  user_id : None                # It's a hint column that is generated in the CLI run-ime.
  save_data_file_local: None    # It's a hint column that is generated in the CLI run-ime.
  save_error_file_local: None   # It's a hint column that is generated in the CLI run-ime.
  save_logs_file_local: None    # It's a hint column that is generated in the CLI run-ime.
  save_plot_file_local: None    # It's a hint column that is generated in the CLI run-ime.
  save_performance_local: None  # It's a hint column that is generated in the CLI run-ime.
  save_data_file_aws: None      # It's a hint column that is generated in the CLI run-ime.
  save_error_file_aws: None     # It's a hint column that is generated in the CLI run-ime.
  save_logs_file_aws: None      # It's a hint column that is generated in the CLI run-ime.
  save_plot_file_aws: None      # It's a hint column that is generated in the CLI run-ime.
  save_performance_aws: None    # It's a hint column that is generated in the CLI run-ime.
  repeat_number_per_round: 1    # Repeat overall tasks per round before run end services.
