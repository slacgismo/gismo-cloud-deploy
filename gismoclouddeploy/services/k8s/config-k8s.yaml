services_config_list:
  worker:
      desired_replicas: 1 # Define how many workers run parallel in k8s. The generated workers spread evenly among eks nodes.
      imagePullPolicy: "Always"
      deployment_file: "k8s/worker.deployment.yaml"
      image_name: "worker"
      image_tag: "latest"
  server:
      desired_replicas: 1
      imagePullPolicy: "Always"
      deployment_file: "k8s/server.deployment.yaml"
      service_file: "k8s/server.services.yaml"
      image_name: "server"
      image_tag: "latest"
  redis:
      desired_replicas: 1
      imagePullPolicy: "Always"
      deployment_file: "k8s/redis.deployment.yaml"
      service_file: "k8s/redis.services.yaml"
      image_name: "redis"
      image_tag: "latest"

  rabbitmq:
      desired_replicas: 1
      imagePullPolicy: "Always"
      deployment_file: "k8s/rabbitmq.deployment.yaml"
      service_file: "k8s/rabbitmq.services.yaml"
      image_name: "rabbitmq"
      image_tag: "latest"

  celeryflower:
      desired_replicas: 1
      imagePullPolicy: "Always"
      deployment_file: "k8s/flower.deployment.yaml"
      service_file: "k8s/flower.services.yaml"
      image_name: "celeryflower"
      image_tag: "latest"